<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>在Ubuntu中搭建你的MC服务器——基于Docker</title>
    <url>/posts/bc472a12/</url>
    <content><![CDATA[<p><del>MC超好玩的，谁会拒绝有趣的红石捏？</del></p>
<p>本文主要记录一种在Ubuntu服务器中便捷地搭建MC服务器的方法。</p>
<h2 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h2><ul>
<li>Ubuntu 21.10 (GNU&#x2F;Linux 5.13.0-39-generic x86_64)</li>
<li>Docker version 20.10.14, build a224086</li>
<li>Docker Image: itzg&#x2F;minecraft-server:latest</li>
</ul>
<h2 id="前置：Docker-安装"><a href="#前置：Docker-安装" class="headerlink" title="前置：Docker 安装"></a>前置：Docker 安装</h2><p>详细内容可参考<a href="https://docs.docker.com/engine/install/ubuntu/">Docker官方文档</a>，如果不害怕英文的话。</p>
<p>注意，以下的方案均需要服务器sudo权限，</p>
<h3 id="懒人方案——使用脚本"><a href="#懒人方案——使用脚本" class="headerlink" title="懒人方案——使用脚本"></a>懒人方案——使用脚本</h3><blockquote>
<p>Docker provides a convenience script at get.docker.com to install Docker into development environments quickly and non-interactively. <strong>The convenience script is not recommended for production environments</strong>, but can be used as an example to create a provisioning script that is tailored to your needs.</p>
</blockquote>
<p>在命令行中输入以下命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">curl -fsSL https://get.docker.com -o get-docker.sh</span><br><span class="line">sudo sh get-docker.sh</span><br></pre></td></tr></table></figure>

<p>然后等一会就好了。</p>
<h3 id="手动方案——从官方仓库下载"><a href="#手动方案——从官方仓库下载" class="headerlink" title="手动方案——从官方仓库下载"></a>手动方案——从官方仓库下载</h3><h4 id="配置仓库"><a href="#配置仓库" class="headerlink" title="配置仓库"></a>配置仓库</h4><ol>
<li>下载前置包并添加Docker官方GPG公钥</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install \</span><br><span class="line">    ca-certificates \</span><br><span class="line">    curl \</span><br><span class="line">    gnupg \</span><br><span class="line">    lsb-release</span><br><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>添加Docker稳定版仓库</li>
</ol>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> \</span><br><span class="line">  <span class="string">&quot;deb [arch=<span class="subst">$(dpkg --print-architecture)</span> signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \</span></span><br><span class="line"><span class="string">  <span class="subst">$(lsb_release -cs)</span> stable&quot;</span> | sudo <span class="built_in">tee</span> /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br></pre></td></tr></table></figure>

<h4 id="下载Docker"><a href="#下载Docker" class="headerlink" title="下载Docker"></a>下载Docker</h4><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></table></figure>

<p>验证安装是否成功：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo docker run hello-world</span><br></pre></td></tr></table></figure>

<p>如果成功则可以看到如下截图：</p>
<p><img src="/posts/bc472a12/pic_1649234026617.png" alt="图 1">  </p>
<h2 id="在Docker中部署Minecraft-Server"><a href="#在Docker中部署Minecraft-Server" class="headerlink" title="在Docker中部署Minecraft Server"></a>在Docker中部署Minecraft Server</h2><p>这里使用一个由itzg以及其余百位大佬共同维护的一个Docker镜像：<a href="https://hub.docker.com/r/itzg/minecraft-server">minecraft-server</a>（<a href="https://github.com/itzg/docker-minecraft-server">Github地址</a>）</p>
<p>在命令行中输入以下指令（注意修改部分参数以符合你的需求）：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker run \</span><br><span class="line">    -d -it \ <span class="comment"># 后台运行容器，以交互模式运行容器并为容器重新分配一个伪终端</span></span><br><span class="line">    -p 25565:25565 \ <span class="comment"># 宿主机端口:容器端口</span></span><br><span class="line">    --name=mcserver \ <span class="comment"># 容器名称，便于后续管理</span></span><br><span class="line">    --<span class="built_in">env</span>=EXEC_DIRECTLY=<span class="literal">true</span> \ <span class="comment"># 允许docker attach显示彩色输出</span></span><br><span class="line">    --<span class="built_in">env</span>=EULA=TRUE \ <span class="comment"># 接受EULA协议</span></span><br><span class="line">    --<span class="built_in">env</span>=VERSION=1.18.2 \ <span class="comment"># 指定游戏版本为1.18.2，默认使用最新版</span></span><br><span class="line">    --<span class="built_in">env</span>=TZ=Asia/Shanghai \ <span class="comment"># mc服务器日志时区</span></span><br><span class="line">    --<span class="built_in">env</span>=TYPE=PAPER \ <span class="comment"># 服务器核心类型</span></span><br><span class="line">    --<span class="built_in">env</span>=MEMORY=4G \ <span class="comment"># 指定内存限制</span></span><br><span class="line">    --<span class="built_in">env</span>=LOG_TIMESTAMP=<span class="literal">true</span> \ <span class="comment"># 在日志中记录时间戳</span></span><br><span class="line">    --volume=/foo/bar:/data \ <span class="comment"># 宿主机存储目录:容器内部目录。修改为你的目录！</span></span><br><span class="line">    --restart=always \ <span class="comment"># 容器停止便立即重启</span></span><br><span class="line">    itzg/minecraft-server</span><br></pre></td></tr></table></figure>

<p>执行后耐心等待镜像下载以及游戏核心下载即可，如果下载出现问题可以删除容器后重新运行。</p>
<h2 id="MC服务器管理"><a href="#MC服务器管理" class="headerlink" title="MC服务器管理"></a>MC服务器管理</h2><ul>
<li>查看容器状态</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure>

<ul>
<li>交互式控制</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -i mcserver rcon-cli</span><br></pre></td></tr></table></figure>

<ul>
<li>只执行单条指令（例如<code>stop</code>)：</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> mcserver rcon-cli stop</span><br></pre></td></tr></table></figure>

<ul>
<li>附加到服务器命令行：</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker attach mcserver</span><br></pre></td></tr></table></figure>

<p><em>退出方法：依次按下<code>Ctrl-p</code>、<code>Ctrl-q</code>以安全地退出服务器命令行。</em></p>
<ul>
<li>查看服务器日志：</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">docker logs mcserver</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>Ubuntu</tag>
        <tag>Docker</tag>
        <tag>Minecraft Server</tag>
      </tags>
  </entry>
  <entry>
    <title>HELLO WORLD</title>
    <url>/posts/87e5865b/</url>
    <content><![CDATA[<p>这是Jesse Senior的第一条博客。</p>
<p>本人之后大概会在博客上写一些自己折腾的笔记，主要也是为了让之后的人少走弯路，也是学习了那么多他人的博客后自己所做的补偿吧。[笑]</p>
<p><img src="/posts/87e5865b/MISAKA.png" alt="理直气壮"></p>
<p>本人的文章全部采用<a href="https://creativecommons.org/licenses/by-sa/4.0/">CC-BY-SA-4.0</a>协议，借鉴本人的文章时记得使用引用或者添加脚注，搬运记得加原文链接。（应该没人会看我的文章吧…）</p>
<p>同时本人亦会在文章中准确申明参考来源与链接。</p>
<p>至于为什么使用<code>HELLO WORLD</code>作为标题，大概是因为这是我的第一条博客吧，就像学习编程语言时生成的第一条输出一样，是对这片新世界的第一声招呼。</p>
<p>希望我能一直维护这个博客到毕业吧。</p>
<p>以上，及，</p>
<hr>
<p><code>print(&quot;Hello World!&quot;)</code></p>
]]></content>
  </entry>
  <entry>
    <title>WSL2多开Ubuntu实例</title>
    <url>/posts/90d3eb82/</url>
    <content><![CDATA[<p>最近在捣鼓软路由和OpenWrt，经常需要开一个Linux环境来交叉编译各种固件<em>（有一说一，挺折腾人的 ::&gt;_&lt;:: 不过也挺锻炼人的）</em>。虽然说可以创建个linux虚拟机或者docker容器来编译，但个人觉得这些方案太“重”了，正好巨硬整了个<strong>WSL2</strong>(Windows Subsystem for Linux)这么个好东西，那当然是要充分利用起来啦(。・∀・)ノ</p>
<p>然而目前的WSL<strong>并不</strong>支持为一个发行版（本文以Ubuntu为例）启动多个示例（也就是多开），所以目前我们只能手动配置。TAT</p>
<h2 id="下载-Ubuntu-WSL2-最新镜像"><a href="#下载-Ubuntu-WSL2-最新镜像" class="headerlink" title="下载 Ubuntu WSL2 最新镜像"></a>下载 Ubuntu WSL2 最新镜像</h2><p>以下是Ubuntu Server 22.04 LTS (Jammy Jellyfish) 最新版本（每日构建）下载地址：</p>
<p><a href="https://cloud-images.ubuntu.com/wsl/jammy/current/ubuntu-jammy-wsl-amd64-wsl.rootfs.tar.gz">https://cloud-images.ubuntu.com/wsl/jammy/current/ubuntu-jammy-wsl-amd64-wsl.rootfs.tar.gz</a></p>
<p>但考虑到国内网络环境，也可以通过清华大学开源软件镜像站（或者别的国内镜像站）下载：</p>
<p><a href="https://mirrors.tuna.tsinghua.edu.cn/ubuntu-cloud-images/wsl/jammy/current/ubuntu-jammy-wsl-amd64-wsl.rootfs.tar.gz">https://mirrors.tuna.tsinghua.edu.cn/ubuntu-cloud-images/wsl/jammy/current/ubuntu-jammy-wsl-amd64-wsl.rootfs.tar.gz</a></p>
<p>参考下载命令:</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line"><span class="built_in">Invoke-WebRequest</span> <span class="literal">-Uri</span> <span class="string">&quot;https://mirrors.tuna.tsinghua.edu.cn/ubuntu-cloud-images/wsl/jammy/current/ubuntu-jammy-wsl-amd64-wsl.rootfs.tar.gz&quot;</span> <span class="literal">-OutFile</span> <span class="string">&quot;ubuntu-jammy-wsl-amd64-wsl.rootfs.tar.gz&quot;</span></span><br></pre></td></tr></table></figure>

<h2 id="导入到WSL2中"><a href="#导入到WSL2中" class="headerlink" title="导入到WSL2中"></a>导入到WSL2中</h2><p>导入命令如下所示</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">wsl <span class="literal">--import</span> &lt;DistroName&gt; &lt;InstallLocation&gt; &lt;InstallTarFile&gt;</span><br></pre></td></tr></table></figure>

<p>其中：</p>
<ul>
<li><code>&lt;DistroName&gt;</code>：实例名称</li>
<li><code>&lt;InstallLocation&gt;</code>：实例安装位置</li>
<li><code>&lt;InstallTarFile&gt;</code>：安装文件位置</li>
</ul>
<p>以下为命令示例：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">wsl <span class="literal">--import</span> Ubuntu<span class="literal">-Example</span>  .\Ubuntu<span class="literal">-Example</span>\ .\ubuntu<span class="literal">-jammy-wsl-amd64-wsl</span>.rootfs.tar.gz</span><br></pre></td></tr></table></figure>

<p>修改实例名和安装位置就可以实现多开辣！</p>
<p>导入成功后可以通过以下命令进入创建好的Ubuntu实例：</p>
<figure class="highlight powershell"><table><tr><td class="code"><pre><span class="line">wsl <span class="literal">-d</span> &lt;DistroName&gt;</span><br></pre></td></tr></table></figure>

<h2 id="配置普通用户账户"><a href="#配置普通用户账户" class="headerlink" title="配置普通用户账户"></a>配置普通用户账户</h2><p>在容器中运行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">read</span> -p <span class="string">&quot;Please enter username: &quot;</span> NEW_USER</span><br><span class="line">useradd -m -G sudo -s /bin/bash <span class="string">&quot;<span class="variable">$NEW_USER</span>&quot;</span></span><br><span class="line">passwd <span class="string">&quot;<span class="variable">$NEW_USER</span>&quot;</span></span><br><span class="line"><span class="built_in">tee</span> /etc/wsl.conf &lt;&lt;<span class="string">_EOF</span></span><br><span class="line"><span class="string">[user]</span></span><br><span class="line"><span class="string">default=$&#123;NEW_USER&#125;</span></span><br><span class="line"><span class="string">_EOF</span></span><br></pre></td></tr></table></figure>

<p>然后退出WSL2容器(Ctrl+D)，在PowerShell中运行以下命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wsl --terminate &lt;Distribution Name&gt;</span><br><span class="line">wsl -d &lt;Distribution Name&gt;</span><br></pre></td></tr></table></figure>

<p>现在便是以普通用户进行操作啦~</p>
<hr>
<p>参考资料：</p>
<ul>
<li><a href="https://cloudbytes.dev/snippets/how-to-install-multiple-instances-of-ubuntu-in-wsl2">https://cloudbytes.dev/snippets/how-to-install-multiple-instances-of-ubuntu-in-wsl2</a></li>
<li><a href="https://learn.microsoft.com/en-us/windows/wsl/use-custom-distro">https://learn.microsoft.com/en-us/windows/wsl/use-custom-distro</a></li>
</ul>
]]></content>
      <tags>
        <tag>Ubuntu</tag>
        <tag>WSL2</tag>
      </tags>
  </entry>
</search>
